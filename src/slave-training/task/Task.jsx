import React from 'react';
import { Card, Divider, Typography, Button, Checkbox, Skeleton } from 'antd';
import { Watermark } from '@hirohe/react-watermark';

import Tags from '../../components/Tags';

export default function Task({
  title,
  subTitle,
  action,
  task,
  randomNumber = Math.random() * 1000000,
  isCompleted = false,
  isFailed = false,
  onCompleteTask,
  onFailTask,
}) {
  const [showBonusTask, setShowBonusTask] = React.useState(false);

  if (task.loading) {
    return (
      <Card style={{ width: 400, marginBottom: 20 }}>
        <Skeleton loading active>
          <Card.Meta
            title='Task loading'
            description='Task is being generated by the server'
          />
        </Skeleton>
      </Card>
    );
  }

  return (
    <div style={{ width: 400, marginBottom: 20 }}>
      <Watermark
        show={isCompleted || isFailed}
        text={isCompleted ? 'Complete' : isFailed ? 'Failed' : ''}
      >
        <Card
          title={<Card.Meta title={title} description={subTitle} />}
          extra={action}
        >
          <Typography.Paragraph>{task.task}</Typography.Paragraph>

          <Typography.Text strong>Time requirement:</Typography.Text>
          <Typography.Paragraph>
            {task.timeOptions[randomNumber % task.timeOptions.length]}
          </Typography.Paragraph>

          {!(showBonusTask || isCompleted) && (
            <Button
              size='small'
              type='dashed'
              style={{ marginBottom: 20 }}
              onClick={() => setShowBonusTask(true)}
            >
              Show bonus task
            </Button>
          )}
          {(showBonusTask || isCompleted) && (
            <>
              <Typography.Text strong>Bonus Task:</Typography.Text>
              <Typography.Paragraph>{task.bonusTask}</Typography.Paragraph>
            </>
          )}

          <br />
          <Tags
            values={task.requiresBodyPart}
            colourFunction={{ undefined: 'blue' }}
          />
          <Tags
            values={task.requiresEquipment}
            colourFunction={{ undefined: 'red' }}
          />

          {!(isCompleted || isFailed) && (
            <>
              <Divider />
              <div style={{ display: 'grid' }}>
                <div className='flex space-between'>
                  <Button
                    type='primary'
                    onClick={() => onCompleteTask(task._id)}
                  >
                    I completed the task!
                  </Button>
                  <Button onClick={() => onFailTask(task._id)}>
                    I failed the task
                  </Button>
                </div>
                {task.bonusTask && (
                  <Checkbox style={{ margin: '10px auto' }}>
                    I attempted the Bonus Task
                  </Checkbox>
                )}
              </div>
            </>
          )}
        </Card>
      </Watermark>
    </div>
  );
}
